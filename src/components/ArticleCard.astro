---
export interface Props {
  title: string;
  description: string;
  image?: string;
  date?: string;
  author?: string;
  readTime?: string;
  tags?: string[];
  slug?: string;
  delay?: number;
}

const { 
  title, 
  description, 
  image, 
  date, 
  author, 
  readTime, 
  tags = [], 
  slug,
  delay = 0 
} = Astro.props;
---

<article 
  class="bg-white rounded-2xl shadow-lg overflow-hidden card-hover scroll-animate fade-up group"
  style={`transition-delay: ${delay}s`}
>
  {image && (
    <div class="relative overflow-hidden h-48">
      <img 
        src={image} 
        alt={title}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      />
    </div>
  )}
  
  <div class="p-6">
    {(date || author || readTime) && (
      <div class="flex items-center gap-4 text-sm text-gray-500 mb-3">
        {date && (
          <span class="flex items-center gap-1">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {date}
          </span>
        )}
        {author && (
          <span class="flex items-center gap-1">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            {author}
          </span>
        )}
        {readTime && (
          <span class="flex items-center gap-1">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            {readTime}
          </span>
        )}
      </div>
    )}
    
    <h3 class="text-xl font-bold text-dark-800 mb-3 group-hover:text-primary-600 transition-colors">
      {title}
    </h3>
    
    <p class="text-gray-600 leading-relaxed mb-4">
      {description}
    </p>
    
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {tags.map(tag => (
          <span class="bg-primary-100 text-primary-700 px-2 py-1 rounded-full text-xs font-medium">
            {tag}
          </span>
        ))}
      </div>
    )}
    
    {slug && (
      <a 
        href={`/blog/${slug}`} 
        class="inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 font-medium transition-colors"
      >
        Leer m√°s
        <svg class="w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
        </svg>
      </a>
    )}
  </div>
</article>